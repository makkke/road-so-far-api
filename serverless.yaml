service: road-so-far-api

frameworkVersion: ">=1.5.0 <2.0.0"

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-build-plugin

custom:
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
  serverless-offline:
    babelOptions:
      presets: ['es2015', 'stage-0']

provider:
  name: aws
  runtime: nodejs4.3
  region: us-west-2
  stage: development
  environment:
    DYNAMODB_FUEL_PURCHASES_TABLE: rsf-${opt:stage, self:provider.stage}-fuelPurchases
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_FUEL_PURCHASES_TABLE}"

functions:
  auth:
    handler: auth/handler.handler
  graphql:
    handler: graphql/handler.handler
    events:
    - http:
        path: graphql
        method: post
        cors: true
        integration: lambda
        authorizer: auth

resources:
  Resources:
    FuelPurchasesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_FUEL_PURCHASES_TABLE}
